# Composite workflow to run pre-commit autoupdate, then create a pull request

name: Pre-commit Autoupdate
permissions: write-all
on:
  workflow_dispatch:
  # schedule:
  #   # Every Monday 11AM UTC (~6AM US/Eastern)
  #   - cron: "0 11 * * 1"

env:
  PYTHON_VERSION: "3.12"
  PRE_COMMIT_VERSION: "4.0.1"
  PR_BRANCH: "ci/pre-commit-autoupdate"

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Setup Python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: "Install pre-commit"
        run: python -m pip install pre-commit==${{ env.PRE_COMMIT_VERSION }}
        shell: bash

      - id: autoupdate-run
        name: "Run pre-commit autoupdate"
        run: |
          UPDATE_OUTPUT=$(pre-commit autoupdate)
          echo "$UPDATE_OUTPUT" | sed -rn 's|^(.*updating.*)$|* \1|p' > tempfilewat
          echo "OUTPUT_STRIPPED=$(cat tempfilewat)" >> "$GITHUB_OUTPUT"
          rm tempfilewat
        shell: bash

      - name: "Create PR for updates"
        uses: peter-evans/create-pull-request@v7
        with:
          branch: ${{ env.PR_BRANCH }}
          title: "Pre-commit autoupdate"
          body: ${{ steps.autoupdate-run.outputs.OUTPUT_STRIPPED }}
